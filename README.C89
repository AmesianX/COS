#
# o---------------------------------------------------------------------o
# |
# | COS C89 README
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: README.C89,v 1.6 2009/05/08 17:03:20 ldeniau Exp $
# |
#

COS C89 compliance:
-------------------

COS core generates code conform to ISO C89 but it requires a ISO C99 preprocessor.

CosBase (core) can be compiled with a standalone C99 preprocessor and a C89 compiler.

CosStd and other modules require a C99 compiler or a compiler which supports at least
  - compound litterals (automatic constructors)
  - flexible arrays (some class cluster definition like Array)
  - 64 bits integers on non 64 bits architectures (class Long)
  - complex numbers (class Complex)
  - some C99 library functions

Example of CosBase compilation (see CosBase/compile89.sh):
  cd CosBase ; make bootstrap ; ./compile89.sh ; ls src/*.[ao]
  ./compile89.sh clean

Details of compilation on Linux (see CosBase/compile89.sh):
  cpp -std=c99 -pedantic -W -Wall -Iinclude -DCOS_C89 -DOSNAME=Linux -E -o src/file.i src/file.c
  gcc -std=c89 -pedantic -W -Wall -O3                                -c -o obj/file.o src/file.i

  - the preprocessing step may generate warnings about the undefinition of __STDC_VERSION__
    but usually, standalone preprocessors allow to undef __STDC_VERSION__

Standalone C99 preprocessor:
  http://code.google.com/p/ucpp/

