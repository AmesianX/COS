#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- prologue
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: prologue,v 1.10 2009/01/22 16:45:07 ldeniau Exp $
# |
#

#
# NOTE-USER: config variables from make invocation
#
# INSTALL = where to install the project (optional, default '/usr'    )
# OSYS    = operating system             (optional, default 'uname -s')
# ARCH    = system architecture          (optional, default 'uname -m')
# ARGS    = program.run extra arguments
# SHOW    = yes -> show  commands
# TRACE   = yes -> trace variables
#

#
# NOTE-INFO: important variables set
#
# PREFIX  = where to get     COS files                           (autodetected)
# MAKDIR  = where to get     COS makefiles                       (PREFIX/include/cos)
# EXEDIR  = where to get     COS tools         (cossym, cosgen)  (PREFIX/bin)
# BASEDIR = where to get     the project files (base)            (autodetected)
# DESTDIR = where to build   the project       (destination)     (autodetected)
# INSTDIR = where to install the project       (installation)    (INSTALL)
# OSNAME  = OSYS_ARCH
#

# some useful functions
eq      = $(if $(subst $1,,$2),,t)
neq     = $(if $(subst $1,,$2),t,)
assert  = $(if $1,,$(error $2))
exists  = $(call assert,$(wildcard $1),$2)
missing = $(filter-out $(wildcard $1),$1)
reverse = $(strip $(if $1,$(call reverse,$(wordlist 2,$(words $1),$1)) $(firstword $1)))

# detect prefix path (e.g /path/to/CosBase or /usr or /usr/local)
PREFIX := $(abspath $(subst include/cos/prologue,,$(lastword $(MAKEFILE_LIST))))

# detect project path (e.g path-to-project)
BASEDIR := $(abspath $(dir $(firstword $(MAKEFILE_LIST))))

# detect destination path (e.g path-to-user)
DESTDIR := $(abspath $(PWD))

# set/detect install path (e.g path-to-install)
ifeq ($(INSTDIR),)
INSTDIR = $(abspath $(if $(INSTALL),$(INSTALL),$(firstword $(wildcard /usr))))
endif

# set install path for documentation (e.g path-to-install-shared)
ifeq ($(INSTDOC),)
INSTDOC = $(INSTDIR)/share/doc/$($(PRJTYPE))
endif

# file listing installed files
ifeq ($(INSTALLED),)
INSTALLED = $(INSTDOC)/installed_$(OSNAME).txt
endif

# set/detect operating system (e.g. Linux)
OSYS := $(if $(OSYS),$(OSYS),$(shell uname -s))

# set/detect architecture (e.g. x86_64)
ARCH := $(if $(ARCH),$(ARCH),$(shell uname -m))

# other useful variables
MAKDIR := $(PREFIX)/include/cos
EXEDIR := $(PREFIX)/bin
OSNAME  = $(OSYS)_$(ARCH)

# for debugging 
ifeq ($(TRACE),yes)
$(info PREFIX  = $(PREFIX))
$(info BASEDIR = $(BASEDIR))
$(info DESTDIR = $(DESTDIR))
$(info INSTDIR = $(INSTDIR))
$(info OSNAME  = $(OSNAME))
endif

# checks
$(call assert, $(OSYS)              , unable to detect operating system)
$(call assert, $(ARCH)              , unable to detect system architecture)
$(call exists, $(PREFIX)            , unable to find PREFIX='$(PREFIX)')
$(call exists, $(BASEDIR)           , unable to find BASEDIR='$(BASEDIR)')
$(call exists, $(MAKDIR)            , unable to find MAKDIR='$(MAKDIR)')
$(call exists, $(EXEDIR)            , unable to find EXEDIR='$(EXEDIR)')
$(call exists, $(MAKDIR)/epilogue   , unable to detect COS makefiles)
$(call exists, $(MAKDIR)/cfg/$(OSYS), unable to find COS config for '$(OSYS)')

# cancel default rules
.SUFFIXES:

# default target
.DEFAULT_GOAL = all

# exported variables
export INSTDIR
export INSTDOC
export INSTALLED

# include operating system config
include $(MAKDIR)/cfg/$(OSYS)

# end of makefile

