#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- prologue
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: prologue,v 1.14 2009/06/14 17:47:36 ldeniau Exp $
# |
#

#
# NOTE-USER: make requirements
#
# COS makefiles requires GNU make version 3.80 or higher
#

#
# NOTE-USER: config variables from make invocation
#
# INSTALL = where to install the project (optional, default is config specific)
# OSNAME  = operating system             (optional, default is 'uname -s')
# ARGS    = program.run extra arguments
# SHOW    = yes -> show commands
#

#
# some useful constant
#
comma  := ,
empty  :=
space  := $(empty) $(empty)

#
# some useful functions
#
eq      = $(if $(patsubst $1,,$2),,t)
neq     = $(if $(patsubst $1,,$2),t,)
first   = $(word 1,$1)
last    = $(word $(words $1),$1)
rest    = $(wordlist 2,$(words $1),$1)
chop    = $(wordlist 2,$(words $1),_ $1)
assert  = $(if $1,,$(error $2))
exists  = $(if $(wildcard $1),,$(error $2))
mkdir   = $(if $(wildcard $1),,$(shell mkdir -p $1))
reverse = $(strip $(if $1,$(call reverse,$(call rest,$1)) $(call first,$1)))

ifeq ($(origin abspath),undefined)
mkpath  = $(strip /$(patsubst /%,%,$(patsubst %/,%,$(subst / ,/, \
            $(call rmdots_, \
              $(subst /,/ ,$(call rplpat_,/./,/,$(call rplpat_,//,/, \
                $(call mkpath_,$1)/))))))))
mkpath_ = $(if $(call ispath_,$1),$(CURDIR)/)$1
ispath_ = $(call eq,$(patsubst /%,%,$1),$1)
rplpat_ = $(strip $(if $(call eq,$(subst $1,$2,$3),$3),$3, \
            $(call rplpat_,$1,$2,$(subst $1,$2,$3))))
rmdots_ = $(strip $(if $1, \
            $(if $(call eq,../,$(call first,$1)), \
              $(call rmdots_,$(call rest,$1),$(call chop,$2)), \
              $(call rmdots_,$(call rest,$1),$2 $(call first,$1))),$2))
else
mkpath  = $(abspath $1)
endif

#
# NOTE-INFO: important variables set
#
# COSDIR = where to get COS files (autodetected)
# OSNAME = operating system name  (autodetected)
#

# detect cos path (e.g path-to-this-file)
COSDIR := $(patsubst %/prologue,%,$(call last,$(MAKEFILE_LIST)))

# detect operating system (e.g. Linux)
OSNAME := $(shell uname -s)
ifeq ($(OSNAME),)
OSNAME := Default
$(warning OSNAME set to Default for configuration)
endif

# clear some suffixes (MAKEFLAGS += -R doesn't work)
.SUFFIXES:

# set command echo
_ := $(if $(call eq,$(SHOW),yes),,@)

# debug
ifneq ($(SHOW),yes)
MAKEFLAGS += --no-print-directory
endif

# checks
$(call exists, $(COSDIR), unable to find COSDIR='$(COSDIR)')
$(call assert, $(OSNAME), unable to detect operating system)

# include operating system config
include $(COSDIR)/cfg/$(OSNAME)

# end of makefile

