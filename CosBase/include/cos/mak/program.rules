#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- program rules
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: program.rules,v 1.11 2008/12/12 17:37:50 ldeniau Exp $
# |
#

#
# targets context (deferred -> immediate)
#
BINNAME  := $(program)$(TARGETEXT)
SBINNAME := $(program)$(TARGETEXT)$(if $(TARGETEXT),s,_s)

$(TARGET).%: TARGET    := $(TARGET)
$(TARGET).%: TARGETEXT := $(TARGETEXT)
$(TARGET).%: BINNAME   := $(BINNAME)
$(TARGET).%: SBINNAME  := $(SBINNAME)

#
# clean targets
#
.PHONY: $(TARGET).clean

$(TARGET).clean:
	@  echo "*** Cleaning " $(TARGET)
	$_ $(RM) $(OBJDIR)
	$_ $(RM) $(BINDIR)/$(BINNAME)
	$_ $(RM) $(BINDIR)/$(SBINNAME)

#
# build targets
#
ifneq ($(filter $(TARGET) $(TARGET).run $(TARGET).srun,$(GOALS)),)

.PHONY: $(TARGET)
.PHONY: $(TARGET).dir
.PHONY: $(TARGET).run $(TARGET).srun
.PHONY: $(TARGET).bin $(TARGET).sbin
.PHONY: $(TARGET).pre $(TARGET).post

$(TARGET): $(TARGET).dir \
           $(TARGET).pre \
           $(if $(filter shared,$(LNKTYPE)),$(TARGET).bin ) \
           $(if $(filter static,$(LNKTYPE)),$(TARGET).sbin) \
           $(TARGET).post

$(TARGET).dir:
	$_ $(MKDIR) $(OBJDIR) $(TMPDIR) $(BINDIR) $(LIBDIR)

#
# rules for building static program
#
$(TARGET).sbin: CCFLAGS += $(STATIC_CC)
$(TARGET).sbin: LDFLAGS += $(STATIC_LD)
$(TARGET).sbin: $(BINDIR)/$(SBINNAME)

$(BINDIR)/$(SBINNAME): $(OBJECTS) $(OBJDIR)/$(program)_$(COSSYM)_s.o
	@  echo "*** Building " $(notdir $@)
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $^ -o $@ $(LIBS) $(SYSLIBS)
	$_ $(EXEDIR)/$(COSSYM)      --out=$(<D)/$(program)_$(COSSYM)_s.c $(COSSYMOPT) $@
	$_ $(CC) $(INCLUDE) $(CCFLAGS) -c $(<D)/$(program)_$(COSSYM)_s.c -o $(<D)/$(program)_$(COSSYM)_s.o
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $^ -o $@ $(LIBS) $(SYSLIBS)
	$_ $(if $(STRIP),$(STRIP) $@)

#
# rules for building shared program
#
$(TARGET).bin: $(BINDIR)/$(BINNAME)

$(BINDIR)/$(BINNAME): $(OBJECTS) $(OBJDIR)/$(program)_$(COSSYM).o
	@  echo "*** Building " $(notdir $@)
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $^ -o $@ $(LIBS) $(SYSLIBS)
	$_ $(EXEDIR)/$(COSSYM) $(MODS) --out=$(<D)/$(program)_$(COSSYM).c $(COSSYMOPT) $@
	$_ $(CC) $(INCLUDE) $(CCFLAGS) -c    $(<D)/$(program)_$(COSSYM).c -o $(<D)/$(program)_$(COSSYM).o
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $^ -o $@ $(LIBS) $(SYSLIBS)

#
# rules for running static program (helper)
#
$(TARGET).srun: $(TARGET)
	@  echo "*** Running  " $(SBINNAME)
	$_ $(BINDIR)/$(SBINNAME) $(ARGS)

#
# rules for running shared program (helper)
#
$(TARGET).run: $(TARGET)
	@  echo "*** Running  " $(BINNAME)
	$_ export $(SYSLIBPATH)=$$$(SYSLIBPATH)`echo "$(patsubst -L%,:%,$(LIBRARY))" | \
	   $(SED) 's, :,:,g'` ; \
	   $(BINDIR)/$(BINNAME) $(ARGS)

#
# include other target rules
#
include $(MAKDIR)/mak/compile.rules

endif # $(TARGET)

# end of makefile
