#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- program
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: program,v 1.13 2009/06/14 20:31:20 ldeniau Exp $
# |
#

#
# targets context (deferred -> immediate)
#
BINNAME  := $(program)$(TARGETEXT)$(BINEXT)
SBINNAME := $(program)$(TARGETEXT)$(if $(TARGETEXT),s,_s)$(BINEXT)

$(TARGET).%: TARGET    := $(TARGET)
$(TARGET).%: TARGETEXT := $(TARGETEXT)
$(TARGET).%: BINNAME   := $(BINNAME)
$(TARGET).%: SBINNAME  := $(SBINNAME)

#
# build targets
#
.PHONY: $(TARGET)
.PHONY: $(TARGET).run $(TARGET).srun
.PHONY: $(TARGET).bin $(TARGET).sbin
.PHONY: $(TARGET).pre $(TARGET).post

$(TARGET): $(TARGET).pre  \
           $(if $(filter shared,$(BINTYPE)),$(TARGET).bin ) \
           $(if $(filter static,$(BINTYPE)),$(TARGET).sbin) \
           $(TARGET).post

#
# rules for building program with dynamic linkage
#
$(TARGET).bin: $(OSNAME)/bin/$(BINNAME)

$(OSNAME)/bin/$(BINNAME): $(OSNAME)/$(TARGET)/$(program)_syms.o
	@  echo "*** Building [$(TARGET)] $(@F)"
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $(RPATH) $(OBJECTS) $< -o $@ $(LIBS) $(SYSLIBS)

#
# rules for building program with static linkage
#
$(TARGET).sbin: CCFLAGS += $(STATIC_CC)
$(TARGET).sbin: LDFLAGS += $(STATIC_LD)
$(TARGET).sbin: $(OSNAME)/bin/$(SBINNAME)

$(OSNAME)/bin/$(SBINNAME): $(OSNAME)/$(TARGET)/$(program)_syms.o
	@  echo "*** Building [$(TARGET)] $(@F)"
	$_ $(LD) $(LIBRARY) $(LDFLAGS) $(OBJECTS) $< -o $@ $(LIBS) $(SYSLIBS)
	$_ $(if $(STRIP),$(STRIP) $@)

#
# rules for running shared program (helper)
#
$(TARGET).run: $(LIBTYPE) := $(filter shared,$(LIBTYPE))
$(TARGET).run: $(TARGET)
	@  echo "*** Running [$(TARGET)] $(BINNAME)"
	$_ export $(SYSLIBPATH)=$$$(SYSLIBPATH)`echo "$(patsubst -L%,:%,$(LIBRARY))" | \
     sed -e 's, :,:,g'` ; \
     $(OSNAME)/bin/$(BINNAME) $(ARGS)

#
# rules for running static program (helper)
#
$(TARGET).srun: $(LIBTYPE) := $(filter static,$(LIBTYPE))
$(TARGET).srun: $(TARGET)
	@  echo "*** Running [$(TARGET)] $(SBINNAME)"
	$_ $(OSNAME)/bin/$(SBINNAME) $(ARGS)

#
# include other target rules
#
include $(COSDIR)/mak/compile

# end of makefile
