#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- project
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: project,v 1.17 2009/01/22 16:45:07 ldeniau Exp $
# |
#

# checks
$(call assert, $(PRJTYPE), empty project type)
$(call assert, $(LNKTYPE), unable to detect link modes)
$(call assert, $(SOURCES), unable to find source files)

#
# project goals
#
GOALS := $(patsubst install,                        all      ,$(GOALS))
GOALS := $(patsubst tests,                          all      ,$(GOALS))
GOALS := $(patsubst all.clean, $(addsuffix .clean,$(TARGETS)),$(GOALS))
GOALS := $(patsubst all.srun,  $(addsuffix .srun, $(TARGETS)),$(GOALS))
GOALS := $(patsubst all.run,   $(addsuffix .run,  $(TARGETS)),$(GOALS))
GOALS := $(patsubst all,                          $(TARGETS) ,$(GOALS))
GOALS := $(sort $(GOALS))

ifeq ($(TRACE),yes)
$(info GOALS = $(GOALS))
endif

# debug target

TARGET    := debug
TARGETEXT := _d

$(TARGET).%: CPPFLAGS += $(DEBUG_CPP)
$(TARGET).%:  CCFLAGS += $(DEBUG_CC)
$(TARGET).%:  LDFLAGS += $(DEBUG_LD)

include $(MAKDIR)/mak/$(PRJTYPE)

# profile target

TARGET    := profile
TARGETEXT := _p

$(TARGET).%: CPPFLAGS += $(PROFILE_CPP)
$(TARGET).%:  CCFLAGS += $(PROFILE_CC)
$(TARGET).%:  LDFLAGS += $(PROFILE_LD)

include $(MAKDIR)/mak/$(PRJTYPE)

# release target

TARGET    := release
TARGETEXT :=

$(TARGET).%: CPPFLAGS += $(RELEASE_CPP)
$(TARGET).%:  CCFLAGS += $(RELEASE_CC)
$(TARGET).%:  LDFLAGS += $(RELEASE_LD)

include $(MAKDIR)/mak/$(PRJTYPE)

# directories target

.PHONY: project.dir

project.dir: $(call missing,$(BINDIR) $(LIBDIR) $(TMPDIR))

$(BINDIR) $(LIBDIR) $(TMPDIR):
	$_ $(MKDIR) $@

# end of makefile
