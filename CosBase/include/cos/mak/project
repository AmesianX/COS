#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- project (program or library)
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: project,v 1.9 2008/12/12 18:23:28 ldeniau Exp $
# |
#

#
# project goals
#
GOALS := $(patsubst install,                        all      ,$(GOALS))
GOALS := $(patsubst tests,                          all      ,$(GOALS))
GOALS := $(patsubst all.clean, $(addsuffix .clean,$(TARGETS)),$(GOALS))
GOALS := $(patsubst all.srun,  $(addsuffix .srun, $(TARGETS)),$(GOALS))
GOALS := $(patsubst all.run,   $(addsuffix .run,  $(TARGETS)),$(GOALS))
GOALS := $(patsubst all,                          $(TARGETS) ,$(GOALS))

GOALS := $(sort $(GOALS))

ifeq ($(TRACE),yes)
$(info GOALS = $(GOALS))
endif

#
# install targets
#
.PHONY: install
.PHONY: install.dir 
.PHONY: install.pre do.install install.post

install: clean all install.dir install.pre do.install install.post

do.install:
	@  echo "*** Installing $($(PRJTYPE))"
	$_ cd $(BASEDIR);                                          \
	   for f in $(filter share/doc/% include/%, $(FILES)) ; do \
	     $(CP) -P $$f $(INSTDIR)/$$f;                          \
	   done
	$_ cd $(DESTDIR)/$(OSNAME);                                \
	   for f in $(filter bin/% lib/%, $(FILES)) ; do           \
	     $(CP) -P $$f $(INSTDIR)/$$f;                          \
	   done

install.dir:
	$_ $(MKDIR) $(INSTDIR) \
	     $(call missing,$(abspath $(addprefix $(INSTDIR)/,$(sort $(dir $(FILES))))))

#
# tests targets
#
.PHONY: tests
.PHONY: tests.dir 
.PHONY: tests.pre do.tests tests.post

tests: all tests.dir tests.pre do.tests tests.post

do.tests:
	@  echo "*** Testing   $($(PRJTYPE))"
	$_ cd $(DESTDIR)/tests && $(MAKE) -C $(BASEDIR)/tests $(if $(ARGS),release,debug).run

tests.dir: $(DESTDIR)/tests

$(DESTDIR)/tests:
	$_ $(MKDIR) $@

#
# project targets
#
.PHONY: all all.run all.srun all.clean

all      :                    $(TARGETS)
all.run  : $(addsuffix .run,  $(TARGETS))
all.srun : $(addsuffix .srun, $(TARGETS))
all.clean: $(addsuffix .clean,$(TARGETS))

# debug target

TARGET    := debug
TARGETEXT := _d

$(TARGET).%: CPPFLAGS += $(DEBUG_CPP)
$(TARGET).%:  CCFLAGS += $(DEBUG_CC)
$(TARGET).%:  LDFLAGS += $(DEBUG_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

# profile target

TARGET    := profile
TARGETEXT := _p

$(TARGET).%: CPPFLAGS += $(PROFILE_CPP)
$(TARGET).%:  CCFLAGS += $(PROFILE_CC)
$(TARGET).%:  LDFLAGS += $(PROFILE_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

# release target

TARGET    := release
TARGETEXT :=

$(TARGET).%: CPPFLAGS += $(RELEASE_CPP)
$(TARGET).%:  CCFLAGS += $(RELEASE_CC)
$(TARGET).%:  LDFLAGS += $(RELEASE_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

# directories target

.PHONY: project.dir

project.dir: $(TMPDIR) $(BINDIR) $(LIBDIR)

$(TMPDIR):
	$_ $(MKDIR) $@

$(BINDIR):
	$_ $(MKDIR) $@

$(LIBDIR):
	$_ $(MKDIR) $@

# end of makefile
