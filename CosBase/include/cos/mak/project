#
# o---------------------------------------------------------------------o
# |
# | COS makefile -- project (program or library)
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: project,v 1.3 2008/12/10 13:07:34 ldeniau Exp $
# |
#

#
# project goals (fragile)
#
GOALS := $(patsubst install,                        all      ,$(GOALS))
GOALS := $(patsubst tests,                          all      ,$(GOALS))
GOALS := $(patsubst all.clean, $(addsuffix .clean,$(TARGETS)),$(GOALS))
GOALS := $(patsubst all.srun,  $(addsuffix .srun, $(TARGETS)),$(GOALS))
GOALS := $(patsubst all.run,   $(addsuffix .run,  $(TARGETS)),$(GOALS))
GOALS := $(patsubst all,                          $(TARGETS) ,$(GOALS))

GOALS := $(sort $(GOALS))

ifeq ($(TRACE),yes)
$(info GOALS   = $(GOALS))
endif

#
# project targets
#
.PHONY: all all.run all.srun all.clean

all      :                    $(TARGETS)
all.run  : $(addsuffix .run,  $(TARGETS))
all.srun : $(addsuffix .srun, $(TARGETS))
all.clean: $(addsuffix .clean,$(TARGETS))

#
# install target
#
.PHONY: install
.PHONY: install.dir 
.PHONY: install.pre do.install install.post

install: clean all install.dir install.pre do.install install.post

install.dir:
	@  $(MKDIR) $(INSTDIR)/include $(INSTDIR)/bin $(INSTDIR)/lib

do.install:
	@  echo "*** Installing module $($(PRJTYPE))"
	$_ $(if $(wildcard $(BASEDIR)/include/*)      , $(CP) $(BASEDIR)/include       $(INSTDIR))
	$_ $(if $(wildcard $(DESTDIR)/$(OSNAME)/bin/*), $(CP) $(DESTDIR)/$(OSNAME)/bin $(INSTDIR))
	$_ $(if $(wildcard $(DESTDIR)/$(OSNAME)/lib/*), $(CP) $(DESTDIR)/$(OSNAME)/lib $(INSTDIR))
	
#
# tests target
#
.PHONY: tests
.PHONY: tests.dir 
.PHONY: tests.pre do.tests tests.post

tests: all tests.dir tests.pre do.tests tests.post

tests.dir:
	@  $(MKDIR) $(DESTDIR)/tests

do.tests:
	@  echo "*** Testing module $($(PRJTYPE))"
	$_ cd $(DESTDIR)/tests && $(MAKE) -C $(BASEDIR)/tests $(if $(ARGS),release,debug).run $(ARGS)

#
# debug target
#
TARGET    := debug
TARGETEXT := _d

$(TARGET).%: CPPFLAGS += $(DEBUG_CPP)
$(TARGET).%:  CCFLAGS += $(DEBUG_CC)
$(TARGET).%:  LDFLAGS += $(DEBUG_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

#
# profile target
#
TARGET    := profile
TARGETEXT := _p

$(TARGET).%: CPPFLAGS += $(PROFILE_CPP)
$(TARGET).%:  CCFLAGS += $(PROFILE_CC)
$(TARGET).%:  LDFLAGS += $(PROFILE_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

#
# release target
#
TARGET    := release
TARGETEXT :=

$(TARGET).%: CPPFLAGS += $(RELEASE_CPP)
$(TARGET).%:  CCFLAGS += $(RELEASE_CC)
$(TARGET).%:  LDFLAGS += $(RELEASE_LD)

include $(MAKDIR)/mak/$(PRJTYPE).rules

# end of makefile
