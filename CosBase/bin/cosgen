#!/bin/sh
#
# o---------------------------------------------------------------------o
# |
# | COS generics (filter)
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: cosgen,v 1.10 2009/01/22 16:45:07 ldeniau Exp $
# |
#

# default settings
progname=`basename $0`
exedir=`dirname $0`
filelist=
out="_cosgen.c"
datestr=`date`

# helper
usage() {

cat <<END-OF-TEXT

  $progname extracts COS defgeneric from header files
  and outputs a C file which must be compiled/linked with your project.

  Usage:
    $progname <options> files

  Options:
    --help
      This help.

    --in=<file_name>
      Use the content of file_name to specify list of files
      Multiple files can be provided with multiple --in

    --out=<file_name>
      Put the result in file_name
      Default is: $out

END-OF-TEXT

    exit 1
}

# parse arguments
while [ "$1" != "" ] ; do

	val=`expr $1 : '--in=\(.*\)'`
	if [ "$val" != "" ] ; then
		filelist="$filelist `cat $val`";
		shift; continue;
	fi

	val=`expr $1 : '--out=\(.*\)'`
	if [ "$val" != "" ] ; then
		out="$val";
		shift; continue;
	fi

	if [ "$1" = "--help" -o \
	     "$1" =  "-help" ] ; then
    usage
	fi

	val=`expr $1 : '--\(.*\)'`
	if [ "$val" != "" ] ; then
		echo "error: unknown option --$val"
		usage
	fi

	filelist="$filelist $1"
	shift

done

# check coscmt
if grep -F -q "COS-SED-SCRIPT" "$exedir/coscmt" ; then
  # bootstrap script
  chmod -x "$exedir/coscmt"
  cmt="sed -nf $exedir/coscmt"
elif  [ -x "$exedir/coscmt" ] ; then
  # installed coscmt
  cmt="$exedir/coscmt -l"
else
  echo "error: unable to find file $exedir/coscmt"
  usage 
fi

##### Start of _cosgen.c #####

mkdir -p `dirname $out`

cat > $out <<END-OF-TEXT
/*
 * -----------------------------
 * COS generics
 *
 * DO NOT EDIT - DO NOT EDIT - DO NOT EDIT
 * This file was automatically generated by $progname
 * $datestr
 * -----------------------------
 */

#include <cos/Object.h>

END-OF-TEXT

for f in $filelist; do
  # retrieve generics
  gen=`cat $f \
     | $cmt \
     | tr '\n\t' '  ' \
     | sed  -e 's/  *\(defgenericv*\) *(\([^;]*\);/@\1(\2;@/g' \
     | tr '@' '\n' \
     | grep -E -e '^defgenericv?\([^;]*;$' \
     | sed  -e 's/ *\([()\*]\) */\1/g' -e 's/ *, */, /g'`

  # includes
  if [ "$gen" != "" ] ; then
    f=`echo $f | sed -e 's,^.*include/,,' -e 's,^.*src/,,'`
    echo "#include \"$f\""             >> $out
    gens="$gens$gen\n"
  fi
done

# makgeneric
echo "$gens" \
  | sort -u -t ',' -k 2 \
  | sed -e 's/defgeneric/makgeneric/g' >> $out

##### Enf of _cosgen.c #####

# end of script
