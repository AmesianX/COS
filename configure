#!/bin/sh
#
# o---------------------------------------------------------------------o
# |
# | COS configure
# |
# o---------------------------------------------------------------------o
# |
# | C Object System (COS)
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@cern.ch
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: configure,v 1.3 2008/06/28 21:27:53 ldeniau Exp $
# |
#

# default settings
progname=`basename $0`
major=0
minor=7
version=$major.$minor
prefix=/usr
config=`uname -s`
posix=yes
tls=yes
tlsdef="__thread"
datestr=`date`
options=
defines=
cossym=cossym

# directories
build=`pwd`
cd `dirname $0`
base=`pwd`
cd $build
makdir=$base/build/mak
incdir=$base/CosBase/include

# configurations
config_list=`ls $makdir/config.* | sed -e "s+$makdir/config\.++g" -e 's/.*~//g'`
config_list=`echo $config_list`

# helper
settings() {

cat <<END-OF-TEXT
    base   : $base
    build  : $build
    install: $prefix/lib/cos-$version
    prefix : $prefix
    version: $version
    config : $config
    posix  : $posix
    tls    : $tls
    options:$options
    defines:$defines

END-OF-TEXT

}

usage() {

cat <<END-OF-TEXT

  Usage:
    $progname <options>

  Options:
    --help
      this help.

    --prefix=<install_prefix>
      use the given install directory for make install.
      default: --prefix=$prefix

    --config=<config_name>
      use the given build configuration (system specific).
      available configurations: $config_list
      default: --config=$config

    --posix=<no|yes>
      set the POSIX compliance (include unistd.h).
      default: --posix=$posix

    --tls=<no|token>
      set the Thread Local Storage keyword.
      default: --tls=$tlsdef

    --option=<opt_name>
      add extra options to compiler command, multiple options are allowed.
      example: --option="-fsse2" --option="-DMY_DEF"

    --define=<def_name>
      add extra defines to preprocessor command, multiple defines are allowed.
      example: --define="inline=__inline__" --define="restrict=__restrict__"

  Default settings:
END-OF-TEXT

  settings

  exit 1
}

# parse arguments
while [ "$1" != "" ] ; do
	val=`expr $1 : '--prefix=\(.*\)'`
	if [ "$val" != "" ] ; then
		prefix=$val; shift; continue;
	fi

	val=`expr $1 : '--config=\(.*\)'`
	if [ "$val" != "" ] ; then
		config=$val; shift; continue;
	fi

	val=`expr $1 : '--posix=\(.*\)'`
	if [ "$val" != "" ] ; then
	    posix=$val; shift; continue;
	fi

	val=`expr $1 : '--tls=\(.*\)'`
	if [ "$val" != "" ] ; then
	  if [ "$val" = no ] ; then
            tls=no
	  else
	    tls=yes
            [ "$val" != yes ] && tlsdef="$val"
          fi
          shift; continue;
	fi

	val=`expr $1 : '--option=\(.*\)'`
	if [ "$val" != "" ] ; then
		options="$options $val"; shift; continue;
	fi

	val=`expr $1 : '--define=\(.*\)'`
	if [ "$val" != "" ] ; then
		defines="$defines $val"; shift; continue;
	fi

    if   [ "$1" = "--help" ] ; then
       usage
    else
      echo "Unknown option: $1"
      usage
	fi

	shift
done

if [ ! -f "$makdir/config.$config" ] ; then
	echo "Unknown configuration: $config"
	echo "Please use the --config option to specify another build configuration"
    echo "Available configurations:" $config_list
	exit 1
fi

# settings
echo "The C Object System is now configured with the following settings:"
settings

if [ "$posix" = "yes" ] ; then
  defines="$defines COS_POSIX=1"
fi

if [ "$tls" = "yes" ] ; then
  defines="$defines COS_TLS=$tlsdef"
fi

##### Start of local configuration #####

out=$makdir/local
cat > $out <<END-OF-TEXT
# configuration generated by the configure script
# $datestr

INSTALLDIR   = \$(DESTDIR)$prefix

OSNAME      := $config

COS_VERSION := $major.$minor
COS_MAJOR   := $major
COS_MINOR   := $minor
COS_SYMBOL  := $cossym
COS_CCOPTS  :=$options

# end of config
END-OF-TEXT

##### End of local configuration #####

##### Start of local.h header #####

out=$incdir/cos/cos/local.h
cat > $out <<END-OF-TEXT
#ifndef COS_COS_LOCAL_H
#define COS_COS_LOCAL_H

// configuration generated by the configure script
// $datestr

#ifndef COS_COS_COS_H
#error "COS: use <cos/cos/cos.h> instead of <cos/cos/local.h>"
#endif

#define COS_VERSION   $major.$minor
#define COS_MAJOR     $major
#define COS_MINOR     $minor
#define COS_SYMBOL    $cossym
END-OF-TEXT

for define in $defines; do
echo "#define $define" | sed -e 's/=/ /' >> $out
done

echo "
#endif // COS_COS_LOCAL_H" >> $out

##### End of local.h header #####

if [ "$base" != "$build" ] ; then
	cp $base/Makefile $build
fi

echo "You can run now the following targets:"
echo "    make [install | tests | samples]."

# end of script
